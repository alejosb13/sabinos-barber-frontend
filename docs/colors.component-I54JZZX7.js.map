{
  "version": 3,
  "sources": ["src/app/documentacion/theme/colors.component.ts", "src/app/documentacion/theme/colors.component.html"],
  "sourcesContent": ["import { AfterViewInit, Component, HostBinding, Inject, Input, OnInit, Renderer2, forwardRef } from '@angular/core';\nimport { DOCUMENT, NgClass } from '@angular/common';\n\nimport { getStyle, rgbToHex } from '@coreui/utils';\nimport { TextColorDirective, CardComponent, CardHeaderComponent, CardBodyComponent, RowComponent, ColComponent } from '@coreui/angular';\n\n@Component({\n    templateUrl: 'colors.component.html',\n    standalone: true,\n    imports: [TextColorDirective, CardComponent, CardHeaderComponent, CardBodyComponent, RowComponent, forwardRef(() => ThemeColorComponent)]\n})\nexport class ColorsComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2\n  ) {\n  }\n\n  public themeColors(): void {\n    Array.from(this.document.querySelectorAll('.theme-color')).forEach(\n      (element: Element) => {\n        const htmlElement = element as HTMLElement;\n        const background = getStyle('background-color', htmlElement) ?? '#fff';\n        const table = this.renderer.createElement('table');\n        table.innerHTML = `\n          <table class=\"table w-100\">\n            <tr>\n              <td class=\"text-muted\">HEX:</td>\n              <td class=\"font-weight-bold\">${rgbToHex(background)}</td>\n            </tr>\n            <tr>\n              <td class=\"text-muted\">RGB:</td>\n              <td class=\"font-weight-bold\">${background}</td>\n            </tr>\n          </table>\n        `;\n        this.renderer.appendChild(htmlElement.parentNode, table);\n        // @ts-ignore\n        // el.parentNode.appendChild(table);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.themeColors();\n  }\n}\n\n@Component({\n    selector: 'app-theme-color',\n    template: `\n    <c-col xl=\"2\" md=\"4\" sm=\"6\" xs=\"12\" class=\"my-4 ms-4\">\n      <div [ngClass]=\"colorClasses\" style=\"padding-top: 75%;\"></div>\n      <ng-content></ng-content>\n    </c-col>\n  `,\n    standalone: true,\n    imports: [ColComponent, NgClass],\n})\nexport class ThemeColorComponent implements OnInit {\n  @Input() color = '';\n  public colorClasses = {\n    'theme-color w-75 rounded mb-3': true\n  };\n\n  @HostBinding('style.display') display = 'contents';\n\n  ngOnInit(): void {\n    this.colorClasses = {\n      ...this.colorClasses,\n      [`bg-${this.color}`]: !!this.color\n    };\n  }\n}\n\n", "<c-card class=\"mb-4\">\n  <c-card-header>\n    Theme colors\n  </c-card-header>\n  <c-card-body>\n    <c-row>\n      <app-theme-color color=\"primary\">\n        <h6>Brand Primary Color</h6>\n      </app-theme-color>\n      <app-theme-color color=\"secondary\">\n        <h6>Brand Secondary Color</h6>\n      </app-theme-color>\n      <app-theme-color color=\"success\">\n        <h6>Brand Success Color</h6>\n      </app-theme-color>\n      <app-theme-color color=\"danger\">\n        <h6>Brand Danger Color</h6>\n      </app-theme-color>\n      <app-theme-color color=\"warning\">\n        <h6>Brand Warning Color</h6>\n      </app-theme-color>\n      <app-theme-color color=\"info\">\n        <h6>Brand Info Color</h6>\n      </app-theme-color>\n      <app-theme-color color=\"light\">\n        <h6>Brand Light Color</h6>\n      </app-theme-color>\n      <app-theme-color color=\"dark\">\n        <h6>Brand Dark Color</h6>\n      </app-theme-color>\n    </c-row>\n  </c-card-body>\n</c-card>\n"],
  "mappings": "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",
  "names": []
}
