{
  "version": 3,
  "sources": ["src/app/documentacion/charts/charts.component.ts", "src/app/documentacion/charts/charts.component.html", "src/app/documentacion/charts/routes.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { ChartData } from 'chart.js';\nimport { ChartjsComponent } from '@coreui/angular-chartjs';\nimport { RowComponent, ColComponent, TextColorDirective, CardComponent, CardHeaderComponent, CardBodyComponent } from '@coreui/angular';\nimport { DocsCalloutComponent } from '@docs-components/public-api';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss'],\n    standalone: true,\n    imports: [RowComponent, ColComponent, DocsCalloutComponent, TextColorDirective, CardComponent, CardHeaderComponent, CardBodyComponent, ChartjsComponent]\n})\nexport class ChartsComponent {\n\n  options = {\n    maintainAspectRatio: false\n  };\n\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  chartBarData: ChartData = {\n    labels: [...this.months].slice(0, 7),\n    datasets: [\n      {\n        label: 'GitHub Commits',\n        backgroundColor: '#f87979',\n        data: [40, 20, 12, 39, 17, 42, 79]\n      }\n    ]\n  };\n\n  // chartBarOptions = {\n  //   maintainAspectRatio: false,\n  // };\n\n  chartLineData: ChartData = {\n    labels: [...this.months].slice(0, 7),\n    datasets: [\n      {\n        label: 'My First dataset',\n        backgroundColor: 'rgba(220, 220, 220, 0.2)',\n        borderColor: 'rgba(220, 220, 220, 1)',\n        pointBackgroundColor: 'rgba(220, 220, 220, 1)',\n        pointBorderColor: '#fff',\n        data: [this.randomData, this.randomData, this.randomData, this.randomData, this.randomData, this.randomData, this.randomData]\n      },\n      {\n        label: 'My Second dataset',\n        backgroundColor: 'rgba(151, 187, 205, 0.2)',\n        borderColor: 'rgba(151, 187, 205, 1)',\n        pointBackgroundColor: 'rgba(151, 187, 205, 1)',\n        pointBorderColor: '#fff',\n        data: [this.randomData, this.randomData, this.randomData, this.randomData, this.randomData, this.randomData, this.randomData]\n      }\n    ]\n  };\n\n  chartLineOptions = {\n    maintainAspectRatio: false\n  };\n\n  chartDoughnutData: ChartData = {\n    labels: ['VueJs', 'EmberJs', 'ReactJs', 'Angular'],\n    datasets: [\n      {\n        backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\n        data: [40, 20, 80, 10]\n      }\n    ]\n  };\n\n  // chartDoughnutOptions = {\n  //   aspectRatio: 1,\n  //   responsive: true,\n  //   maintainAspectRatio: false,\n  //   radius: '100%'\n  // };\n\n  chartPieData: ChartData = {\n    labels: ['Red', 'Green', 'Yellow'],\n    datasets: [\n      {\n        data: [300, 50, 100],\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n      }\n    ]\n  };\n\n  // chartPieOptions = {\n  //   aspectRatio: 1,\n  //   responsive: true,\n  //   maintainAspectRatio: false,\n  //   radius: '100%'\n  // };\n\n  chartPolarAreaData: ChartData = {\n    labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],\n    datasets: [\n      {\n        data: [11, 16, 7, 3, 14],\n        backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB']\n      }\n    ]\n  };\n\n  chartRadarData: ChartData = {\n    labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n    datasets: [\n      {\n        label: '2020',\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        pointBackgroundColor: 'rgba(179,181,198,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(179,181,198,1)',\n        data: [65, 59, 90, 81, 56, 55, 40]\n      },\n      {\n        label: '2021',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        pointBackgroundColor: 'rgba(255,99,132,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(255,99,132,1)',\n        data: [this.randomData, this.randomData, this.randomData, this.randomData, this.randomData, this.randomData, this.randomData]\n      }\n    ]\n  };\n\n  // chartRadarOptions = {\n  //   aspectRatio: 1.5,\n  //   responsive: true,\n  //   maintainAspectRatio: false,\n  // };\n\n  get randomData() {\n    return Math.round(Math.random() * 100);\n  }\n\n}\n", "<c-row>\n  <c-col xs=\"12\">\n    <app-docs-callout href=\"charts\">\n      CoreUI Angular wrapper component for Chart.js 4.4, the most popular charting library.\n      <br>\n    </app-docs-callout>\n  </c-col>\n  <c-col xs=\"12\" lg=\"6\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        Bar Chart\n      </c-card-header>\n      <c-card-body>\n        <c-chart type=\"bar\" [data]=\"chartBarData\" [options]=\"options\" />\n      </c-card-body>\n    </c-card>\n  </c-col>\n  <c-col xs=\"12\" lg=\"6\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        Line Chart\n      </c-card-header>\n      <c-card-body>\n        <c-chart type=\"line\" [data]=\"chartLineData\" [options]=\"options\" />\n      </c-card-body>\n    </c-card>\n  </c-col>\n</c-row>\n<c-row>\n  <c-col xs=\"12\" lg=\"6\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        Doughnut Chart\n      </c-card-header>\n      <c-card-body>\n        <c-chart type=\"doughnut\" [data]=\"chartDoughnutData\" [options]=\"options\" />\n      </c-card-body>\n    </c-card>\n  </c-col>\n  <c-col xs=\"12\" lg=\"6\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        Pie Chart\n      </c-card-header>\n      <c-card-body>\n        <c-chart type=\"pie\" [data]=\"chartPieData\" [options]=\"options\" />\n      </c-card-body>\n    </c-card>\n  </c-col>\n</c-row>\n<c-row>\n  <c-col xs=\"12\" lg=\"6\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        Polar Area Chart\n      </c-card-header>\n      <c-card-body>\n        <c-chart type=\"polarArea\" [data]=\"chartPolarAreaData\" [options]=\"options\" />\n      </c-card-body>\n    </c-card>\n  </c-col>\n  <c-col xs=\"12\" lg=\"6\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        Radar Chart\n      </c-card-header>\n      <c-card-body>\n        <c-chart type=\"radar\" [data]=\"chartRadarData\" [options]=\"options\" />\n      </c-card-body>\n    </c-card>\n  </c-col>\n</c-row>\n", "import { Routes } from '@angular/router';\n\nimport { ChartsComponent } from './charts.component';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: ChartsComponent,\n    data: {\n      title: 'Charts'\n    }\n  }\n];\n"],
  "mappings": "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",
  "names": []
}
