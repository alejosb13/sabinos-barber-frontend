{
  "version": 3,
  "sources": ["src/app/documentacion/forms/ranges/ranges.component.ts", "src/app/documentacion/forms/ranges/ranges.component.html"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { DocsExampleComponent } from '@docs-components/public-api';\nimport { RowComponent, ColComponent, TextColorDirective, CardComponent, CardHeaderComponent, CardBodyComponent, FormLabelDirective, FormControlDirective } from '@coreui/angular';\n\n@Component({\n    selector: 'app-ranges',\n    templateUrl: './ranges.component.html',\n    styleUrls: ['./ranges.component.scss'],\n    standalone: true,\n    imports: [RowComponent, ColComponent, TextColorDirective, CardComponent, CardHeaderComponent, CardBodyComponent, DocsExampleComponent, FormLabelDirective, FormControlDirective]\n})\nexport class RangesComponent {\n\n  constructor() { }\n\n}\n", "<c-row ngPreserveWhitespaces>\n  <c-col xs=\"12\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        <strong>Angular Range</strong> <small></small>\n      </c-card-header>\n      <c-card-body>\n        <p class=\"text-body-secondary small\">\n          Create custom <code>&lt;input type=&#34;range&#34;&gt;</code> controls\n          with <code>&lt;input cFormControl type=\"range\"&gt;</code>.\n        </p>\n        <app-docs-example href=\"forms/range\">\n          <label cLabel for=\"customRange1\">Example range</label>\n          <input cFormControl id=\"customRange1\" type=\"range\" />\n        </app-docs-example>\n      </c-card-body>\n    </c-card>\n  </c-col>\n  <c-col xs=\"12\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        <strong>Angular Range</strong> <small>Disabled</small>\n      </c-card-header>\n      <c-card-body>\n        <p class=\"text-body-secondary small\">\n          Add the <code>disabled</code> boolean attribute on an input to give it\n          a grayed out appearance and remove pointer events.\n        </p>\n        <app-docs-example href=\"forms/range#disabled\">\n          <label cLabel for=\"disabledRange\">Disabled range</label>\n          <input cFormControl disabled id=\"disabledRange\" type=\"range\" />\n        </app-docs-example>\n      </c-card-body>\n    </c-card>\n  </c-col>\n  <c-col xs=\"12\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        <strong>Angular Range</strong> <small>Min and max</small>\n      </c-card-header>\n      <c-card-body>\n        <p class=\"text-body-secondary small\">\n          Range inputs have implicit values for <code>min-0</code> and\n          <code>max-100</code>, respectively.\n          You may specify new values for those using the <code>min</code> and\n          <code>max</code> attributes.\n        </p>\n        <app-docs-example href=\"forms/range#min-and-max\">\n          <label cLabel for=\"customRange2\">Example range</label>\n          <input\n            cFormControl\n            id=\"customRange2\"\n            max=\"5\"\n            min=\"0\"\n            type=\"range\"\n            value=\"3\"\n          />\n        </app-docs-example>\n      </c-card-body>\n    </c-card>\n  </c-col>\n  <c-col xs=\"12\">\n    <c-card class=\"mb-4\">\n      <c-card-header>\n        <strong>Angular Range</strong> <small>Steps</small>\n      </c-card-header>\n      <c-card-body>\n        <p class=\"text-body-secondary small\">\n          By default, range inputs &#34;snap&#34; to integer values. To change\n          this, you can specify a <code>step</code> value. In the example below,\n          we double the number of steps by using\n          <code>step=&#34;0.5&#34;</code>.\n        </p>\n        <app-docs-example href=\"forms/range#steps\">\n          <label cLabel for=\"customRange3\">Example range</label>\n          <input\n            cFormControl\n            id=\"customRange3\"\n            max=\"5\"\n            min=\"0\"\n            step=\"0.5\"\n            type=\"range\"\n            value=\"3\"\n          />\n        </app-docs-example>\n      </c-card-body>\n    </c-card>\n  </c-col>\n</c-row>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAWM,IAAO,mBAAP,MAAO,iBAAe;EAE1B,cAAA;EAAgB;;;mCAFL,kBAAe;AAAA;iFAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,KAAA,MAAA,GAAA,QAAA,CAAA,CAAA,MAAA,IAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,uBAAA,OAAA,GAAA,CAAA,QAAA,aAAA,GAAA,CAAA,UAAA,IAAA,OAAA,cAAA,GAAA,CAAA,gBAAA,IAAA,MAAA,gBAAA,QAAA,OAAA,GAAA,CAAA,QAAA,sBAAA,GAAA,CAAA,UAAA,IAAA,OAAA,eAAA,GAAA,CAAA,gBAAA,IAAA,YAAA,IAAA,MAAA,iBAAA,QAAA,OAAA,GAAA,CAAA,QAAA,yBAAA,GAAA,CAAA,UAAA,IAAA,OAAA,cAAA,GAAA,CAAA,gBAAA,IAAA,MAAA,gBAAA,OAAA,KAAA,OAAA,KAAA,QAAA,SAAA,SAAA,GAAA,GAAA,CAAA,QAAA,mBAAA,GAAA,CAAA,UAAA,IAAA,OAAA,cAAA,GAAA,CAAA,gBAAA,IAAA,MAAA,gBAAA,OAAA,KAAA,OAAA,KAAA,QAAA,OAAA,QAAA,SAAA,SAAA,GAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACX5B,IAAA,yBAAA,GAAA,OAAA;AACE,IAAA,iBAAA,GAAA,MAAA;AAAA,IAAA,yBAAA,GAAA,SAAA,CAAA;AACE,IAAA,iBAAA,GAAA,QAAA;AAAA,IAAA,yBAAA,GAAA,UAAA,CAAA;AACE,IAAA,iBAAA,GAAA,UAAA;AAAA,IAAA,yBAAA,GAAA,eAAA;AACE,IAAA,iBAAA,GAAA,YAAA;AAAA,IAAA,yBAAA,GAAA,QAAA;AAAQ,IAAA,iBAAA,GAAA,eAAA;AAAa,IAAA,uBAAA;AAAU,IAAA,iBAAA,IAAA,GAAA;AAAA,IAAA,oBAAA,IAAA,OAAA;AACjC,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,yBAAA,IAAA,aAAA;AACE,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,KAAA,CAAA;AACE,IAAA,iBAAA,IAAA,4BAAA;AAAc,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,sBAAA;AAAkC,IAAA,uBAAA;AAAQ,IAAA,iBAAA,IAAA,4BAAA;AACzD,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,mCAAA;AAAuC,IAAA,uBAAA;AAAO,IAAA,iBAAA,IAAA,aAAA;AAC3D,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,oBAAA,CAAA;AACE,IAAA,iBAAA,IAAA,cAAA;AAAA,IAAA,yBAAA,IAAA,SAAA,CAAA;AAAiC,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AAC9C,IAAA,iBAAA,IAAA,cAAA;AAAA,IAAA,oBAAA,IAAA,SAAA,CAAA;AACF,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,IAAA,QAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,IAAA,MAAA;AAAA,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,MAAA;AAAA,IAAA,yBAAA,IAAA,SAAA,CAAA;AACE,IAAA,iBAAA,IAAA,QAAA;AAAA,IAAA,yBAAA,IAAA,UAAA,CAAA;AACE,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,yBAAA,IAAA,eAAA;AACE,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,QAAA;AAAQ,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AAAU,IAAA,iBAAA,IAAA,GAAA;AAAA,IAAA,yBAAA,IAAA,OAAA;AAAO,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAChD,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,yBAAA,IAAA,aAAA;AACE,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,KAAA,CAAA;AACE,IAAA,iBAAA,IAAA,sBAAA;AAAQ,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAAQ,IAAA,iBAAA,IAAA,mHAAA;AAEhC,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,oBAAA,CAAA;AACE,IAAA,iBAAA,IAAA,cAAA;AAAA,IAAA,yBAAA,IAAA,SAAA,CAAA;AAAkC,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAChD,IAAA,iBAAA,IAAA,cAAA;AAAA,IAAA,oBAAA,IAAA,SAAA,CAAA;AACF,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,IAAA,QAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,IAAA,MAAA;AAAA,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,MAAA;AAAA,IAAA,yBAAA,IAAA,SAAA,CAAA;AACE,IAAA,iBAAA,IAAA,QAAA;AAAA,IAAA,yBAAA,IAAA,UAAA,CAAA;AACE,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,yBAAA,IAAA,eAAA;AACE,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,QAAA;AAAQ,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AAAU,IAAA,iBAAA,IAAA,GAAA;AAAA,IAAA,yBAAA,IAAA,OAAA;AAAO,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AACnD,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,UAAA;AAAA,IAAA,yBAAA,IAAA,aAAA;AACE,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,KAAA,CAAA;AACE,IAAA,iBAAA,IAAA,oDAAA;AAAsC,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA;AAAQ,IAAA,iBAAA,IAAA,kBAAA;AACzD,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA;AAAO,IAAA,iBAAA,IAAA,4EAAA;AAC2B,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,KAAA;AAAG,IAAA,uBAAA;AAAQ,IAAA,iBAAA,IAAA,kBAAA;AAChE,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,KAAA;AAAG,IAAA,uBAAA;AAAQ,IAAA,iBAAA,IAAA,wBAAA;AACnB,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,YAAA;AAAA,IAAA,yBAAA,IAAA,oBAAA,CAAA;AACE,IAAA,iBAAA,IAAA,cAAA;AAAA,IAAA,yBAAA,KAAA,SAAA,EAAA;AAAiC,IAAA,iBAAA,KAAA,eAAA;AAAa,IAAA,uBAAA;AAC9C,IAAA,iBAAA,KAAA,cAAA;AAAA,IAAA,oBAAA,KAAA,SAAA,EAAA;AAQF,IAAA,iBAAA,KAAA,YAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,KAAA,UAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,KAAA,QAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,KAAA,MAAA;AAAA,IAAA,uBAAA;AACA,IAAA,iBAAA,KAAA,MAAA;AAAA,IAAA,yBAAA,KAAA,SAAA,CAAA;AACE,IAAA,iBAAA,KAAA,QAAA;AAAA,IAAA,yBAAA,KAAA,UAAA,CAAA;AACE,IAAA,iBAAA,KAAA,UAAA;AAAA,IAAA,yBAAA,KAAA,eAAA;AACE,IAAA,iBAAA,KAAA,YAAA;AAAA,IAAA,yBAAA,KAAA,QAAA;AAAQ,IAAA,iBAAA,KAAA,eAAA;AAAa,IAAA,uBAAA;AAAU,IAAA,iBAAA,KAAA,GAAA;AAAA,IAAA,yBAAA,KAAA,OAAA;AAAO,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AAC7C,IAAA,iBAAA,KAAA,UAAA;AAAA,IAAA,uBAAA;AACA,IAAA,iBAAA,KAAA,UAAA;AAAA,IAAA,yBAAA,KAAA,aAAA;AACE,IAAA,iBAAA,KAAA,YAAA;AAAA,IAAA,yBAAA,KAAA,KAAA,CAAA;AACE,IAAA,iBAAA,KAAA,8GAAA;AACwB,IAAA,yBAAA,KAAA,MAAA;AAAM,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AAAQ,IAAA,iBAAA,KAAA,6FAAA;AAE1C,IAAA,yBAAA,KAAA,MAAA;AAAM,IAAA,iBAAA,KAAA,YAAA;AAAkB,IAAA,uBAAA;AAAO,IAAA,iBAAA,KAAA,aAAA;AACjC,IAAA,uBAAA;AACA,IAAA,iBAAA,KAAA,YAAA;AAAA,IAAA,yBAAA,KAAA,oBAAA,EAAA;AACE,IAAA,iBAAA,KAAA,cAAA;AAAA,IAAA,yBAAA,KAAA,SAAA,EAAA;AAAiC,IAAA,iBAAA,KAAA,eAAA;AAAa,IAAA,uBAAA;AAC9C,IAAA,iBAAA,KAAA,cAAA;AAAA,IAAA,oBAAA,KAAA,SAAA,EAAA;AASF,IAAA,iBAAA,KAAA,YAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,KAAA,UAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,KAAA,QAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,KAAA,MAAA;AAAA,IAAA,uBAAA;AACF,IAAA,iBAAA,KAAA,IAAA;AAAA,IAAA,uBAAA;;kBD/Ec,cAAc,cAAkC,eAAe,qBAAqB,mBAAmB,sBAAsB,oBAAoB,oBAAoB,EAAA,CAAA;AAE7K,IAAO,kBAAP;;6EAAO,iBAAe,EAAA,WAAA,mBAAA,UAAA,+DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
