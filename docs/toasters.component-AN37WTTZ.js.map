{
  "version": 3,
  "sources": ["src/app/documentacion/notifications/toasters/toast-simple/toast.component.ts", "src/app/documentacion/notifications/toasters/toast-simple/toast.component.html", "src/app/documentacion/notifications/toasters/toasters.component.ts", "src/app/documentacion/notifications/toasters/toasters.component.html"],
  "sourcesContent": ["import { ChangeDetectorRef, Component, ElementRef, forwardRef, Input, Renderer2 } from '@angular/core';\n\nimport { ToastComponent, ToasterService, ToastHeaderComponent, ToastBodyComponent, ToastCloseDirective, ProgressBarDirective, ProgressComponent } from '@coreui/angular';\n\n@Component({\n    selector: 'app-toast-simple',\n    templateUrl: './toast.component.html',\n    styleUrls: ['./toast.component.scss'],\n    providers: [{ provide: ToastComponent, useExisting: forwardRef(() => AppToastComponent) }],\n    standalone: true,\n    imports: [ToastHeaderComponent, ToastBodyComponent, ToastCloseDirective, ProgressBarDirective, ProgressComponent]\n})\nexport class AppToastComponent extends ToastComponent {\n\n  @Input() closeButton = true;\n  @Input() title = '';\n\n  constructor(\n    public override hostElement: ElementRef,\n    public override renderer: Renderer2,\n    public override toasterService: ToasterService,\n    public override changeDetectorRef: ChangeDetectorRef\n  ) {\n    super(hostElement, renderer, toasterService, changeDetectorRef);\n  }\n}\n", "<ng-container>\n  <c-toast-header [closeButton]=\"closeButton\">\n    <svg class=\"rounded me-2\" focusable=\"false\" height=\"20\" preserveAspectRatio=\"xMidYMid slice\"\n         role=\"img\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect fill=\"#007aff\" height=\"100%\" width=\"100%\"></rect>\n    </svg>\n    <strong>{{ title }}</strong>\n  </c-toast-header>\n  <c-toast-body #toastBody [cToastClose]=\"toastBody.toast\">\n    <p class=\"mb-1\">This is a dynamic toast no {{ toastBody.toast?.index() }} {{ toastBody.toast?.clock }}</p>\n    <ng-content />\n    <c-progress thin [value]=\"25*(toastBody.toast?.clock ?? 1)\" />\n  </c-toast-body>\n</ng-container>\n", "import { JsonPipe, NgClass, NgStyle, SlicePipe } from '@angular/common';\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { ReactiveFormsModule, UntypedFormControl, UntypedFormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport {\n  ButtonDirective,\n  CardBodyComponent,\n  CardComponent,\n  CardHeaderComponent,\n  ColComponent,\n  ContainerComponent,\n  FormCheckComponent,\n  FormCheckInputDirective,\n  FormCheckLabelDirective,\n  FormControlDirective,\n  FormDirective,\n  FormSelectDirective,\n  InputGroupComponent,\n  InputGroupTextDirective,\n  RowComponent,\n  TextColorDirective,\n  ToastBodyComponent,\n  ToastComponent,\n  ToasterComponent,\n  ToasterPlacement,\n  ToastHeaderComponent\n} from '@coreui/angular';\nimport { AppToastComponent } from './toast-simple/toast.component';\n\nexport enum Colors {\n  '' = '',\n  primary = 'primary',\n  secondary = 'secondary',\n  success = 'success',\n  info = 'info',\n  warning = 'warning',\n  danger = 'danger',\n  dark = 'dark',\n  light = 'light',\n}\n\n@Component({\n  selector: 'app-toasters',\n  templateUrl: './toasters.component.html',\n  styleUrls: ['./toasters.component.scss'],\n  standalone: true,\n  imports: [RowComponent, ColComponent, ToasterComponent, NgClass, TextColorDirective, CardComponent, CardHeaderComponent, CardBodyComponent, ContainerComponent, ReactiveFormsModule, FormDirective, FormCheckComponent, FormCheckInputDirective, FormCheckLabelDirective, InputGroupComponent, InputGroupTextDirective, FormControlDirective, FormSelectDirective, ButtonDirective, NgStyle, ToastComponent, ToastHeaderComponent, ToastBodyComponent, AppToastComponent, JsonPipe, SlicePipe, TextColorDirective]\n})\nexport class ToastersComponent implements OnInit {\n\n  positions = Object.values(ToasterPlacement);\n  position = ToasterPlacement.TopEnd;\n  positionStatic = ToasterPlacement.Static;\n  colors = Object.keys(Colors);\n  autohide = true;\n  delay = 5000;\n  fade = true;\n\n  toasterForm = new UntypedFormGroup({\n    autohide: new UntypedFormControl(this.autohide),\n    delay: new UntypedFormControl({ value: this.delay, disabled: !this.autohide }),\n    position: new UntypedFormControl(this.position),\n    fade: new UntypedFormControl({ value: true, disabled: false }),\n    closeButton: new UntypedFormControl(true),\n    color: new UntypedFormControl('')\n  });\n\n  formChanges: Observable<any> = this.toasterForm.valueChanges.pipe(\n    takeUntilDestroyed(),\n    filter(e => e.autohide !== this.autohide)\n  );\n\n  @ViewChildren(ToasterComponent) viewChildren!: QueryList<ToasterComponent>;\n\n  ngOnInit(): void {\n    this.formChanges.subscribe(e => {\n      this.autohide = e.autohide;\n      this.position = e.position;\n      this.fade = e.fade;\n      const control = this.toasterForm?.get('delay');\n      this.autohide ? control?.enable() : control?.disable();\n      this.delay = control?.enabled ? e.timeout : this.delay;\n    });\n  }\n\n  addToast() {\n    const formValues = this.toasterForm.value;\n    const toasterPosition = this.viewChildren.filter(item => item.placement === this.toasterForm.value.position);\n    toasterPosition.forEach((item) => {\n      const title = `Toast ${formValues.color} ${formValues.position}`;\n      const { ...props } = { ...formValues, title };\n      const componentRef = item.addToast(AppToastComponent, props, {});\n      componentRef.instance['closeButton'] = props.closeButton;\n    });\n  }\n}\n", "<c-row>\n  <c-col xs=\"12\">\n    @for (pos of positions | slice : 1; track pos) {\n      <c-toaster [ngClass]=\"'p-3'\" position=\"fixed\" placement=\"{{pos}}\" />\n    }\n    <c-card>\n      <c-card-header>\n        Toaster\n      </c-card-header>\n      <c-card-body>\n        <c-container>\n          <c-row>\n            <c-col lg=\"6\" sm=\"12\">\n              <form [formGroup]=\"toasterForm\" cForm>\n                <h5>Add toast with following props:</h5>\n\n                <c-form-check class=\"my-2 mt-4\">\n                  <input cFormCheckInput formControlName=\"autohide\" id=\"autohide\" type=\"checkbox\">\n                  <label cFormCheckLabel for=\"autohide\">\n                    Toast autohide\n                  </label>\n                </c-form-check>\n\n                <c-input-group>\n                  <span cInputGroupText>Delay</span>\n                  <input cFormControl formControlName=\"delay\" id=\"delay\" [type]=\"'number'\">\n                </c-input-group>\n\n                <c-input-group class=\"my-2\">\n                  <span cInputGroupText>Position</span>\n                  <select cSelect formControlName=\"position\">\n                    @for (position of positions; track position) {\n                      <option [ngValue]=\"position\">\n                        {{ position }}\n                      </option>\n                    }\n                  </select>\n                </c-input-group>\n\n                <c-input-group class=\"my-2\">\n                  <span cInputGroupText>Color</span>\n                  <select cSelect formControlName=\"color\">\n                    @for (color of colors; track color) {\n                      <option [ngValue]=\"color\">\n                        {{ color }}\n                      </option>\n                    }\n                  </select>\n                </c-input-group>\n\n                <c-form-check class=\"my-2\">\n                  <input cFormCheckInput formControlName=\"fade\" id=\"fade\" type=\"checkbox\">\n                  <label cFormCheckLabel for=\"fade\">Fade</label>\n                </c-form-check>\n\n                <c-form-check class=\"my-2\">\n                  <input cFormCheckInput formControlName=\"closeButton\" id=\"close\" type=\"checkbox\">\n                  <label cFormCheckLabel for=\"close\">Close Button</label>\n                </c-form-check>\n                <hr />\n                <button (click)=\"addToast()\" cButton class=\"m-1\" color=\"success\">\n                  Add toast\n                </button>\n              </form>\n            </c-col>\n            <c-col lg=\"6\" sm=\"12\" class=\"mt-3\" [ngStyle]=\"{position: 'relative'}\">\n              <c-toaster [placement]=\"positionStatic\" [ngStyle]=\"{display: 'contents'}\">\n                <c-toast [autohide]=\"false\" [fade]=\"true\" [visible]=\"true\" color=\"danger\">\n                  <c-toast-header>Toast title</c-toast-header>\n                  <c-toast-body>This is a static toast in a static toaster</c-toast-body>\n                </c-toast>\n                <c-toast [fade]=\"true\" [visible]=\"true\" color=\"dark\" >\n                  <c-toast-header [closeButton]=\"false\">Toast title</c-toast-header>\n                  <c-toast-body cTextColor=\"secondary\">This is a static toast in a static toaster</c-toast-body>\n                </c-toast>\n                <app-toast-simple #toast [autohide]=\"false\" [fade]=\"true\" [visible]=\"true\" [title]=\"'App Toast'\"\n                                  color=\"secondary\">\n                  This is a toast in static positioned App toaster! {{ toast.index() }}\n                </app-toast-simple>\n              </c-toaster>\n            </c-col>\n          </c-row>\n        </c-container>\n      </c-card-body>\n    </c-card>\n    <c-card class=\"mt-3\">\n      <c-card-body>\n        <c-row>\n          <c-col>\n            <p>Form value: {{ toasterForm.value | json }}</p>\n          </c-col>\n        </c-row>\n      </c-card-body>\n    </c-card>\n  </c-col>\n</c-row>\n"],
  "mappings": "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",
  "names": ["Colors", "_c0"]
}
